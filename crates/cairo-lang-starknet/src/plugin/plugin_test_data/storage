//! > Test expansion of StarkNet storage logic.

//! > test_runner_name
ExpandContractTestRunner

//! > cairo_code
// TODO(ilya): update format.
#[contract]
mod TestContract {
    #[starknet::storage]
    struct Storage {
        var_felt252: felt252,
        var_u8: u8,
        var_u16: u16,
        var_u32: u32,
        var_u64: u64,
        var_u128: u128,
        var_bool: bool,
        felt252_to_u128: LegacyMap::<felt252, u128>,
        u128_to_bool: LegacyMap::<u128, bool>,
        bool_to_felt252: LegacyMap::<bool, felt252>,
    }
}

//! > generated_cairo_code

//! > expected_diagnostics
error: Type not found.
 --> contract:34:55
    impl StorageEventEmitter of EventEmitter<Storage, Event> {
                                                      ^***^

error: Type not found.
 --> contract:35:44
        fn emit(ref self: Storage, event: @Event) {
                                           ^***^

error: Trait has no implementation in context: core::starknet::event::Event::<<missing>>
 --> contract:38:30
            starknet::Event::append_keys_and_values(event, ref keys, ref values);
                             ^********************^
