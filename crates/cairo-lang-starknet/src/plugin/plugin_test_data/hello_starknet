//! > Test expansion of the hello_starknet contract.

//! > test_runner_name
ExpandContractTestRunner

//! > cairo_code
#[contract]
mod HelloStarknet {
    #[starknet::storage]
    struct Storage { balance: felt252, }

    // Increases the balance by the given amount.
    #[external]
    fn increase_balance(ref self: Storage, amount: felt252) {
        self.balance.write(self.balance.read() + amount);
    }

    // Returns the current balance.
    #[view]
    fn get_balance(self: @Storage) -> felt252 {
        self.balance.read()
    }
}

//! > generated_cairo_code

//! > expected_diagnostics
error: Type not found.
 --> contract:16:55
    impl StorageEventEmitter of EventEmitter<Storage, Event> {
                                                      ^***^

error: Type not found.
 --> contract:17:44
        fn emit(ref self: Storage, event: @Event) {
                                           ^***^

error: Trait has no implementation in context: core::starknet::event::Event::<<missing>>
 --> contract:20:30
            starknet::Event::append_keys_and_values(event, ref keys, ref values);
                             ^********************^
